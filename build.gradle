/*

buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

//plugins {
//  id "com.heroku.sdk.heroku-gradle" version "0.2.0"
//}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
//apply plugin: 'jetty'
apply plugin: 'war'


group = 'com.web'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
	vaadinVersion = '8.1.3'
}

dependencies {
	compile group: 'postgresql', name: 'postgresql', version: '9.0-801.jdbc4'
	compile('org.springframework.boot:spring-boot-starter-data-jpa:1.5.8.RELEASE'){
		exclude module: "tomcat-juli"
	}
//	compile('org.springframework.boot:spring-boot-starter-jdbc:1.5.8.RELEASE')
	compile('com.vaadin:vaadin-spring-boot-starter'){
        exclude module: "spring-boot-starter-tomcat"
    }
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile("org.hibernate:hibernate-core:5.2.10.Final")
	testCompile('org.hibernate:hibernate-validator')
	compile 'com.github.jsimone:webapp-runner:8.5.11.3'
	
	compile 'org.springframework.boot:spring-boot-autoconfigure'
//	compile('org.projectlombok:lombok:1.16.2')
//	compile("org.hsqldb:hsqldb:2.3.0")
	compile("org.springframework.boot:spring-boot-starter-web") 
//    {    exclude module: "spring-boot-starter-tomcat"
//    }
}
dependencyManagement {
	imports {
		mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
	}
	dependencies {
            dependency 'org.assertj:assertj-core:3.6.2'

//          dependency 'org.projectlombok:lombok:1.16.12'
    }
}

//jettyRun.webAppSourceDirectory = file("src/main/java")
//task stage() {
//    dependsOn clean, war
//}
//war.mustRunAfter clean
//
//task copyToLib(type: Copy) {
//    into "$buildDir/server"
//    from(configurations.compile) {
//        include "webapp-runner*"
//    }
//}
//
//stage.dependsOn(copyToLib)

task stage(dependsOn: ['build', 'clean', 'jar'])
build.mustRunAfter clean
jar.mustRunAfter clean


task copyToLib(type: Copy) {
    into "$buildDir/lib"
    from(configurations.compile)
}

stage.dependsOn(copyToLib)

//jar {
//    manifest {
//        attributes 'Main-Class': 'com.foo.bar.MainClass'
//    }
//}

*/

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
//apply plugin: 'war'

jar {
    baseName = 'web-interface'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
    maven { url "http://oss.sonatype.org/content/repositories/vaadin-snapshots/" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
  imports {
    mavenBom 'com.vaadin:vaadin-bom:8.0.0'
  }
}

dependencies {
	compile group: 'org.postgresql', name: 'postgresql', version: '9.3-1100-jdbc4'
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.vaadin:vaadin-spring-boot-starter")
    compile("com.h2database:h2")
    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

